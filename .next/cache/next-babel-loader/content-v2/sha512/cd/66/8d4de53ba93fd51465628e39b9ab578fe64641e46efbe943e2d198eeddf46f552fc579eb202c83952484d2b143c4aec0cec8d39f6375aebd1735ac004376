{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ryota/Documents/react/next_app/components/Firefind.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\n\nclass Firefind extends Component {\n  //初期化。ステートとイベント用メソッドの設定\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      borderBottom: \"1px solid gray\"\n    });\n\n    this.state = {\n      input: '',\n      data: []\n    };\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } //入力フィールドに入力時の処理\n\n\n  doChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  } //ボタンクリック時の処理\n\n\n  doAction(e) {\n    this.findFireData(this.state.input);\n  } //検索の実行\n\n\n  findFireData(s) {\n    let db = firebase.database();\n    let ref = db.ref('sample/');\n    let self = this;\n    ref.orderByKey().equalTo(s).on('value', snapshot => {\n      self.setState({\n        data: snapshot.val()\n      });\n    });\n  } //テーブルの内容の作成\n\n\n  getTableData() {\n    let result = [];\n\n    if (this.state.data == null || this.state.data.length == 0) {\n      return [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"NO DATA.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this)\n      }, \"0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)];\n    }\n\n    for (let i in this.state.data) {\n      result.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: this.state.data[i].ID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: this.state.data[i].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: this.state.data[i].message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this));\n    }\n\n    return result;\n  } //レンダリング\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.doChange,\n        style: this.style,\n        value: this.state.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.doAction,\n        children: \"Find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tdody\", {\n          children: this.getTableData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Firefind;","map":{"version":3,"sources":["/Users/ryota/Documents/react/next_app/components/Firefind.js"],"names":["React","Component","firebase","Firefind","constructor","props","borderBottom","state","input","data","doChange","bind","doAction","e","setState","target","value","findFireData","s","db","database","ref","self","orderByKey","equalTo","on","snapshot","val","getTableData","result","length","i","push","ID","name","message","render","style"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\n\nclass Firefind extends Component {\n    style = {\n        borderBottom: \"1px solid gray\"\n    }\n\n    //初期化。ステートとイベント用メソッドの設定\n    constructor(props){\n        super(props);\n        this.state = {\n            input:'',\n            data:[]\n        }\n        this.doChange = this.doChange.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    //入力フィールドに入力時の処理\n    doChange(e){\n        this.setState({\n            input:e.target.value\n        })\n    }\n\n    //ボタンクリック時の処理\n    doAction(e){\n        this.findFireData(this.state.input);\n    }\n\n    //検索の実行\n    findFireData(s){\n        let db = firebase.database();\n        let ref = db.ref('sample/');\n        let self = this;\n        ref.orderByKey().equalTo(s).on('value', (snapshot) => {\n            self.setState({\n                data:snapshot.val()\n            });\n        });\n    }\n\n    //テーブルの内容の作成\n    getTableData(){\n        let result = [];\n        if (this.state.data == null || this.state.data.length == 0){\n            return [<tr key=\"0\"><th>NO DATA.</th></tr>];\n        }\n        for(let i in this.state.data){\n            result.push(<tr key={i}>\n                <th>{this.state.data[i].ID}</th>\n                <th>{this.state.data[i].name}</th>\n                <th>{this.state.data[i].message}</th>\n            </tr>);\n        }\n        return result;\n    }\n\n    //レンダリング\n    render(){\n        return (<div>\n            <input type=\"text\" onChange={this.doChange} style={this.style} value={this.state.input} />\n            <button onClick={this.doAction}>Find</button>\n            <hr />\n            <table><tdody>\n                {this.getTableData()}    \n            </tdody></table>\n        </div>)\n    }\n}\n\nexport default Firefind;"]},"metadata":{},"sourceType":"module"}