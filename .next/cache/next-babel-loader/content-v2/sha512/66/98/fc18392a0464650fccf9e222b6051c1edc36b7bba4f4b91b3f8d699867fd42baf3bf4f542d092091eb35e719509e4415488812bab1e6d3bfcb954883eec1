{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; //ステート初期値\n\nconst initial = {\n  message: 'START',\n  count: 0\n}; //レデューサー\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} //initStore関数(redux-store.jsで必要)\n\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/ryota/Documents/react/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAC,OADI;AAEZC,EAAAA,KAAK,EAAE;AAFK,CAAhB,C,CAKA;;AACA,SAASC,cAAT,CAAyBC,KAAK,GAAGJ,OAAjC,EAA0CK,MAA1C,EAAkD;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AACHL,QAAAA,OAAO,EAAE,WADN;AAEHC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO;AACHD,QAAAA,OAAO,EAAE,WADN;AAEHC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO;AACHD,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAFZ,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAjBR;AAmBH,C,CAED;;;AACA,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAAGJ,OAA3B,EAAoC;AACvC,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAAwBN,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n//ステート初期値\nconst initial = {\n    message:'START',\n    count: 0\n}\n\n//レデューサー\nfunction counterReducer (state = initial, action) {\n    switch (action.type) {\n        case 'INCREMENT':\n            return {\n                message: 'INCREMENT',\n                count: state.count + 1\n            };\n        case 'DECREMENT':\n            return {\n                message: 'DECREMENT',\n                count: state.count - 1\n            };\n        case 'RESET':\n            return {\n                message: 'RESET',\n                count: initial.count\n            };\n        default:\n            return state;\n    }\n}\n\n//initStore関数(redux-store.jsで必要)\nexport function initStore(state = initial) {\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}